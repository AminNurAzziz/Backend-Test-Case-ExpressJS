openapi: 3.0.0
info:
  title: Library System API
  version: 1.0.0
paths:
  /books:
    get:
      summary: Retrieve all books
      tags:
        - Books
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookList'

    post:
      summary: Create a new book
      tags:
        - Books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBook'
      responses:
        '201':
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /books/{code}:
    get:
      summary: Retrieve a specific book by CODE
      tags:
        - Books
      parameters:
        - in: path
          name: code
          required: true
          description: CODE of the book to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update a book
      tags:
        - Books
      parameters:
        - in: path
          name: code
          required: true
          description: CODE of the book to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBook'
      responses:
        '200':
          description: Book updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a book
      tags:
        - Books
      parameters:
        - in: path
          name: code
          required: true
          description: CODE of the book to delete
          schema:
            type: string
      responses:
        '200':
          description: Book deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Book:
      type: object
      properties:
        code:
          type: string
        title:
          type: string
        author:
          type: string
        stock:
          type: integer
          format: int32

    BookList:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/Book'

    BookResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/Book'

    NewBook:
      type: object
      properties:
        code:
          type: string
        title:
          type: string
        author:
          type: string
        stock:
          type: integer
          format: int32

    UpdateBook:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        stock:
          type: integer
          format: int32

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        
