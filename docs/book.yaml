openapi: 3.0.0
info:
  title: Library System API
  version: 1.0.0
paths:
  /books:
    get:
      summary: Retrieve all books
      tags:    
        - Books  
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Create a new book
      tags:    
        - Books  
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBook'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Bad request

  /books/{id}:
    get:
      summary: Retrieve a specific book by ID
      tags:    
        - Books  
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the book to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found

    put:
      summary: Update a book
      tags:    
        - Books  
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the book to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
        '400':
          description: Bad request

    delete:
      summary: Delete a book
      tags:    
        - Books  
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the book to delete
          schema:
            type: string
      responses:
        '204':
          description: Book deleted successfully
        '404':
          description: Book not found

components:
  schemas:
    Book:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        stock:
          type: integer
          format: int32
    NewBook:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        stock:
          type: integer
          format: int32
